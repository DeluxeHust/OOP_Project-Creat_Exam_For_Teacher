/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.ItemEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import oopproject.Exam;
import oopproject.ListSubject;
import oopproject.MultipleChoiceQuestion;
import oopproject.Question;
import oopproject.Subject;

/**
 *
 * @author linhphan
 */
public class ExamManager extends javax.swing.JFrame {

    /**
     * Creates new form ExamManager
     */
    
    // Danh sach mon hoc
    private ListSubject listSubj;
    
    // luu de thi
    private Exam exam;
    
    //Mon hoc va cau hoi duoc chon
    private Subject selectedSubject;
    private Question selectedQuestion; // cau hoi dang duoc chon
    
    // chi so cua mon hoc va cau hoi duoc chon
    private int indexSelectedSubject;
    private int indexSelectedQuestion;
    private int indexQuesExam;
    
    // set model cho list Subject va list Question
    private DefaultComboBoxModel modelListSubject;
    private DefaultListModel modelListQuestion;
    private DefaultListModel modelListQuesExam;
    
    public ExamManager() throws FileNotFoundException {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        // Khoi tao ListSubject
        listSubj = new ListSubject();
        listSubj.setListSubject(listSubj.readListSubject());
        modelListSubject = new DefaultComboBoxModel();
        initListSubject(listSubj.getListSubject());
        
        // khoi tao Subject duoc chon
        selectedSubject = this.listSubj.getListSubject().get(0);
        indexSelectedSubject = 0;
        
        
        // Khoi tao List mođel
        modelListQuesExam = new DefaultListModel();
        modelListQuestion = new DefaultListModel();
        
        // Chua chon cau hoi nao
        indexSelectedQuestion = -1;
        indexQuesExam = -1;
        
        // khoi tao de thi
        exam = new Exam(selectedSubject.getSubjectName(), selectedSubject.getSubjectID(), "1", "2016-2017", "90", new ArrayList<Question>());
        
        updateQuestionList();
        updatePreviewExam();
        
        
    }
    // khởi tạo danh sách môn học
    public void initListSubject (ArrayList<Subject> listSubject) {
        for(int i=0; i<listSubject.size(); i++) {
            this.modelListSubject.addElement(listSubject.get(i).getSubjectName());
        }
        this.JComListSubject.setModel(modelListSubject);
    }

    // cập nhật danh sách câu hỏi
    public void updateQuestionList() {
        
        this.modelListQuestion = new DefaultListModel();
        
        try {
            for(int i=0; i<selectedSubject.getQuestionList().size(); i++) {
                this.modelListQuestion.addElement(selectedSubject.getQuestionList().get(i).getQuestion());
            
            }
        } catch (NullPointerException e) {
            this.selectedSubject.setQuestionList(new ArrayList<Question>());
        }
        this.JListQuestion.setModel(this.modelListQuestion);
        
    }
    
    // cập nhật câu hỏi trong đề thi
    public void updateQuestionExam() {
        this.modelListQuesExam = new DefaultListModel();
        for(int i=0; i<exam.getQuestionList().size(); i++) {
            modelListQuesExam.addElement(exam.getQuestionList().get(i).getQuestion());
        }
        
        JListQuesExam.setModel(modelListQuesExam);
    }
    
    // cập nhật chi tiết câu hỏi
    public void updateQuesDetail() {
        if(indexQuesExam <0 && indexSelectedQuestion <0) {
            JTextQuesDetail.setText("");
            return;
        }
        String detail = selectedQuestion.showDetailQuestion();
        JTextQuesDetail.setText(detail);
    }
    
    // cập nhật text ở khung xem trước đề thi
    public void updatePreviewExam() {
        
        String preExam = exam.printExam();
        
        JtextExam.setText(preExam);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        JlabelSubjectManager = new javax.swing.JLabel();
        jLbDSMonHoc = new javax.swing.JLabel();
        JComListSubject = new javax.swing.JComboBox<>();
        jLbDSCauHoi = new javax.swing.JLabel();
        jLbChiTietCauHoi = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTextQuesDetail = new javax.swing.JTextArea();
        jLbDeThi = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JtextExam = new javax.swing.JTextArea();
        jLbThongtin = new javax.swing.JLabel();
        jLbTime = new javax.swing.JLabel();
        jLbNamHoc = new javax.swing.JLabel();
        jLbKy = new javax.swing.JLabel();
        JRadioS1 = new javax.swing.JRadioButton();
        JRadioS2 = new javax.swing.JRadioButton();
        JradioHe = new javax.swing.JRadioButton();
        JTextYear = new javax.swing.JTextField();
        JTextTime = new javax.swing.JTextField();
        JbtnAddQues = new javax.swing.JButton();
        JbtnDeleteQues = new javax.swing.JButton();
        JbtnSave = new javax.swing.JButton();
        JtbnOK = new javax.swing.JButton();
        JbtnMix = new javax.swing.JButton();
        JbtnFileOutput = new javax.swing.JButton();
        JbtnOpenExam = new javax.swing.JButton();
        JbtnAutoCreat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListQuestion = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        JListQuesExam = new javax.swing.JList<>();
        jLbDSCauHoi1 = new javax.swing.JLabel();
        jLbTime1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JlabelSubjectManager.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        JlabelSubjectManager.setText("Quản Lí Đề Thi");

        jLbDSMonHoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbDSMonHoc.setText("Danh Sách Môn Học");

        JComListSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JComListSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JComListSubjectItemStateChanged(evt);
            }
        });
        JComListSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComListSubjectActionPerformed(evt);
            }
        });

        jLbDSCauHoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbDSCauHoi.setText("Ngân hàng câu hỏi");

        jLbChiTietCauHoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbChiTietCauHoi.setText("Chi Tiết Câu Hỏi");

        JTextQuesDetail.setColumns(20);
        JTextQuesDetail.setRows(5);
        jScrollPane2.setViewportView(JTextQuesDetail);

        jLbDeThi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbDeThi.setText("Đề Thi");

        JtextExam.setColumns(20);
        JtextExam.setRows(5);
        jScrollPane3.setViewportView(JtextExam);

        jLbThongtin.setText("Thông Tin Đề Thi");

        jLbTime.setText("Thời Gian");

        jLbNamHoc.setText("Năm Học");

        jLbKy.setText("Kì Học");

        buttonGroup1.add(JRadioS1);
        JRadioS1.setSelected(true);
        JRadioS1.setText("1");
        JRadioS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioS1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(JRadioS2);
        JRadioS2.setText("2");
        JRadioS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioS2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(JradioHe);
        JradioHe.setText("Hè");
        JradioHe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JradioHeActionPerformed(evt);
            }
        });

        JTextYear.setText("2016-2017");
        JTextYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextYearKeyReleased(evt);
            }
        });

        JTextTime.setText("90");
        JTextTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTextTimeKeyReleased(evt);
            }
        });

        JbtnAddQues.setText("Thêm vào đề");
        JbtnAddQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnAddQuesActionPerformed(evt);
            }
        });

        JbtnDeleteQues.setText("Xóa khỏi đề");
        JbtnDeleteQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnDeleteQuesActionPerformed(evt);
            }
        });

        JbtnSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JbtnSave.setText(" Lưu Đề Thi");
        JbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnSaveActionPerformed(evt);
            }
        });

        JtbnOK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JtbnOK.setText("OK");
        JtbnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtbnOKActionPerformed(evt);
            }
        });

        JbtnMix.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JbtnMix.setText("Xáo Trộn Câu Hỏi");
        JbtnMix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnMixActionPerformed(evt);
            }
        });

        JbtnFileOutput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JbtnFileOutput.setText("Xuất Ra File");
        JbtnFileOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnFileOutputActionPerformed(evt);
            }
        });

        JbtnOpenExam.setText("Mở đề thi có sẵn");
        JbtnOpenExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnOpenExamActionPerformed(evt);
            }
        });

        JbtnAutoCreat.setText("Sinh đề thi tự động");
        JbtnAutoCreat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbtnAutoCreatActionPerformed(evt);
            }
        });

        JListQuestion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JListQuestion.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Câu hỏi 1", "Câu hỏi 2", "Câu hỏi 3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        JListQuestion.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListQuestionValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(JListQuestion);

        JListQuesExam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        JListQuesExam.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListQuesExamValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(JListQuesExam);

        jLbDSCauHoi1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbDSCauHoi1.setText("Câu Hỏi Trong Đề");

        jLbTime1.setText("phút");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JlabelSubjectManager)
                .addGap(387, 387, 387))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLbDSMonHoc)
                        .addGap(18, 18, 18)
                        .addComponent(JComListSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbDSCauHoi)
                            .addComponent(jLbThongtin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JbtnAddQues)
                                .addGap(79, 79, 79)
                                .addComponent(JbtnDeleteQues))
                            .addComponent(jLbDSCauHoi1)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLbKy)
                                        .addGap(23, 23, 23))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLbTime)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLbNamHoc)
                                .addGap(10, 10, 10)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JRadioS1)
                                .addGap(10, 10, 10)
                                .addComponent(JRadioS2)
                                .addGap(10, 10, 10)
                                .addComponent(JradioHe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                                .addComponent(JbtnSave))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JTextTime, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLbTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(JTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbChiTietCauHoi)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(JbtnAutoCreat, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JbtnOpenExam, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLbDeThi)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(JtbnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JbtnMix))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JbtnFileOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JlabelSubjectManager)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLbChiTietCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLbDeThi)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbDSMonHoc)
                            .addComponent(JComListSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JbtnAutoCreat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JbtnOpenExam, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLbDSCauHoi)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JbtnAddQues)
                            .addComponent(JbtnDeleteQues))
                        .addGap(26, 26, 26)
                        .addComponent(jLbDSCauHoi1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JbtnMix, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLbThongtin)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbTime)
                            .addComponent(JTextTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLbTime1)))
                    .addComponent(JbtnFileOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JTextYear)
                    .addComponent(jLbNamHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbKy)
                    .addComponent(JRadioS1)
                    .addComponent(JRadioS2)
                    .addComponent(JradioHe)
                    .addComponent(JbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JtbnOK))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JComListSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComListSubjectActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_JComListSubjectActionPerformed

    private void JbtnOpenExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnOpenExamActionPerformed
        // TODO add your handling code here:
        JFileChooser fchoo = new JFileChooser();
        File dir = new File("./data/exam");
        fchoo.setCurrentDirectory(dir);
        
        FileFilter filter = new FileNameExtensionFilter(selectedSubject.getSubjectID(), selectedSubject.getSubjectID());
        fchoo.setFileFilter(filter);
        
        fchoo.showOpenDialog(this);
        fchoo.setDialogTitle("Mở đề thi");
        
        if(fchoo.getSelectedFile() == null) {
//            JOptionPane.showMessageDialog(null,"Hủy thao tác!");
            return;
        }
        
        try {
            FileInputStream fin = new FileInputStream(fchoo.getSelectedFile());
            ObjectInputStream oin = new ObjectInputStream(fin);
            exam = (Exam) oin.readObject();
            
            oin.close();
            
          
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error: " + e.getMessage());
        }
        updatePreviewExam();
        updateQuestionExam();
        JOptionPane.showMessageDialog(null,"Mở đề thi thành công!");
    }//GEN-LAST:event_JbtnOpenExamActionPerformed

    private void JbtnAutoCreatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnAutoCreatActionPerformed
        // TODO add your handling code here:
        try {
//            Subject subject2 = new Subject(selectedSubject.getSubjectName(), selectedSubject.getNumChapter(), selectedSubject.getQuestionList());
            exam = new Exam(selectedSubject.getSubjectName(), selectedSubject.getSubjectID(), "1", "2016-2017", "90", new ArrayList<Question>());
            AutoCreatExam creatExam = new AutoCreatExam(selectedSubject, exam, modelListQuesExam, JListQuesExam,modelListQuestion, JListQuestion, JtextExam);
            creatExam.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }

        
    }//GEN-LAST:event_JbtnAutoCreatActionPerformed

    private void JComListSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JComListSubjectItemStateChanged
        // TODO add your handling code here:
        indexSelectedQuestion = -1; 
        
        String selectedSubjName;
        if(evt.getStateChange()== ItemEvent.SELECTED) {
            selectedSubjName = (String) this.JComListSubject.getSelectedItem();
//            System.out.println("selected subject:" + selectedSubjName);
            for(int i=0; i< listSubj.getListSubject().size(); i++) {
                if(selectedSubjName.equalsIgnoreCase(listSubj.getListSubject().get(i).getSubjectName())) {
                    selectedSubject = listSubj.getListSubject().get(i);
                    indexSelectedSubject = i;
                }
            }
            System.out.println("selected subject: " + selectedSubject.getSubjectName());
        }
        updateQuestionList();
        exam = new Exam(selectedSubject.getSubjectName(),selectedSubject.getSubjectID() , "1", "2016 - 2017", "90", new ArrayList<Question>());
        updateQuestionList();
        updateQuestionExam();
        updatePreviewExam();
        
    }//GEN-LAST:event_JComListSubjectItemStateChanged

    private void JListQuestionValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListQuestionValueChanged
        // TODO add your handling code here:
        this.indexSelectedQuestion = this.JListQuestion.getSelectedIndex();
        if(indexSelectedQuestion >=0) {
            indexQuesExam = -1; // bo chon cau trong de
            selectedQuestion = this.selectedSubject.getQuestionList().get(indexSelectedQuestion);
        }
        updateQuesDetail();
//        System.out.println("Selected Question: " + selectedQuestion.getQuestion());
        System.out.println("Selected index Ques: " + indexSelectedQuestion);

    }//GEN-LAST:event_JListQuestionValueChanged

    private void JbtnAddQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnAddQuesActionPerformed
        // TODO add your handling code here:
        
        if(indexSelectedQuestion <0 ) {
            JOptionPane.showMessageDialog(null,"Chưa chọn câu hỏi!");
            return;
        }
        // Kiem tra cau hoi da co trong de chua
        for(int i=0; i<exam.getQuestionList().size(); i++) {
            if(selectedQuestion.equals(exam.getQuestionList().get(i))) {
                JOptionPane.showMessageDialog(null,"Câu hỏi đã có trong đề!");
                return;
            }
        }
        
        // them vao list question Exam
        exam.getQuestionList().add(selectedQuestion);
        System.out.println("Selected Ques: " + selectedQuestion.getQuestion());
        updateQuestionExam();
        updatePreviewExam();
    }//GEN-LAST:event_JbtnAddQuesActionPerformed

    private void JListQuesExamValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListQuesExamValueChanged
        // TODO add your handling code here:
        indexQuesExam = JListQuesExam.getSelectedIndex();
        if(indexQuesExam >=0) {
            indexSelectedQuestion = -1; // Bo chon cau trong ngan hang de thi
            selectedQuestion = exam.getQuestionList().get(indexQuesExam);
        }
       updateQuesDetail();
       System.out.println("Selected index QuesExam: " + indexQuesExam);
    }//GEN-LAST:event_JListQuesExamValueChanged

    private void JbtnDeleteQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnDeleteQuesActionPerformed
        // TODO add your handling code here:
        if(indexQuesExam <0) {
            JOptionPane.showMessageDialog(null,"Chưa chọn câu hỏi để xóa!");
            return;
        }
        
        exam.getQuestionList().remove(indexQuesExam);
        indexQuesExam = -1;
        updateQuestionExam();
        updateQuesDetail();
        updatePreviewExam();
    }//GEN-LAST:event_JbtnDeleteQuesActionPerformed

    private void JTextTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextTimeKeyReleased
        // TODO add your handling code here:
        
        exam.setTime(JTextTime.getText());
        updatePreviewExam();
    }//GEN-LAST:event_JTextTimeKeyReleased

    private void JTextYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTextYearKeyReleased
        // TODO add your handling code here:
        exam.setYear(JTextYear.getText());
        updatePreviewExam();
    }//GEN-LAST:event_JTextYearKeyReleased

    private void JRadioS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioS1ActionPerformed
        // TODO add your handling code here:
        exam.setSemester("1");
        updatePreviewExam();
    }//GEN-LAST:event_JRadioS1ActionPerformed

    private void JRadioS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioS2ActionPerformed
        // TODO add your handling code here:
        exam.setSemester("2");
        updatePreviewExam();
    }//GEN-LAST:event_JRadioS2ActionPerformed

    private void JradioHeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JradioHeActionPerformed
        // TODO add your handling code here:
        exam.setSemester("Hè");
        updatePreviewExam();
    }//GEN-LAST:event_JradioHeActionPerformed

    private void JbtnMixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnMixActionPerformed
        // TODO add your handling code here:
        Collections.shuffle(exam.getQuestionList());
        
        for(int i=0; i< exam.getQuestionList().size(); i++) {
           if(exam.getQuestionList().get(i) instanceof MultipleChoiceQuestion) {
               // downcasting
              MultipleChoiceQuestion multiQues = (MultipleChoiceQuestion) exam.getQuestionList().get(i);
              Collections.shuffle(multiQues.getAnswerList()); 
           }
           
        }
        updatePreviewExam();
        updateQuestionExam();
    }//GEN-LAST:event_JbtnMixActionPerformed

    private void JbtnFileOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnFileOutputActionPerformed
        // TODO add your handling code here:
        JFileChooser fileSave = new JFileChooser();
        fileSave.showSaveDialog(this);
        
        if (fileSave.getSelectedFile() == null) {
            return;
        }
        try {
            FileOutputStream fileOutput = new FileOutputStream(fileSave.getSelectedFile().toString() + ".txt");
            Writer writer = new java.io.OutputStreamWriter(fileOutput, "utf8");
//            FileWriter file2 = new FileWriter(fileSave.getSelectedFile().toString() + ".txt");
            BufferedWriter bw = new BufferedWriter(writer);
           
            bw.write(JtextExam.getText());
            bw.close();
            JOptionPane.showMessageDialog(null,"Xuất file thành công!");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_JbtnFileOutputActionPerformed

    private void JbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbtnSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser examSave = new JFileChooser();
        File dir = new File("./data/exam");
        examSave.setCurrentDirectory(dir);
        
        FileFilter filter = new FileNameExtensionFilter( selectedSubject.getSubjectID(),selectedSubject.getSubjectID());
        examSave.setFileFilter(filter);
        
        examSave.showSaveDialog(this);
        
        if(examSave.getSelectedFile() == null) {
            return;
        }
        try {
            FileOutputStream examOut = new FileOutputStream(examSave.getSelectedFile() + "."+selectedSubject.getSubjectID());
            ObjectOutputStream output = new ObjectOutputStream(examOut);
            output.writeObject(exam); 
            output.close();
            examOut.close();
            JOptionPane.showMessageDialog(null, "Lưu thành công!");
            
        } catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Không tìm thấy đường dẫn!");
        } catch (IOException ex) {
           JOptionPane.showMessageDialog(null, "Có lỗi!");
        }
        
        
    }//GEN-LAST:event_JbtnSaveActionPerformed

    private void JtbnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtbnOKActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_JtbnOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ExamManager().setVisible(true);
                } catch (FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(null,"Không tìm thấy file dữ liệu!");
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComListSubject;
    private javax.swing.JList<String> JListQuesExam;
    private javax.swing.JList<String> JListQuestion;
    private javax.swing.JRadioButton JRadioS1;
    private javax.swing.JRadioButton JRadioS2;
    private javax.swing.JTextArea JTextQuesDetail;
    private javax.swing.JTextField JTextTime;
    private javax.swing.JTextField JTextYear;
    private javax.swing.JButton JbtnAddQues;
    private javax.swing.JButton JbtnAutoCreat;
    private javax.swing.JButton JbtnDeleteQues;
    private javax.swing.JButton JbtnFileOutput;
    private javax.swing.JButton JbtnMix;
    private javax.swing.JButton JbtnOpenExam;
    private javax.swing.JButton JbtnSave;
    private javax.swing.JLabel JlabelSubjectManager;
    private javax.swing.JRadioButton JradioHe;
    private javax.swing.JButton JtbnOK;
    private javax.swing.JTextArea JtextExam;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLbChiTietCauHoi;
    private javax.swing.JLabel jLbDSCauHoi;
    private javax.swing.JLabel jLbDSCauHoi1;
    private javax.swing.JLabel jLbDSMonHoc;
    private javax.swing.JLabel jLbDeThi;
    private javax.swing.JLabel jLbKy;
    private javax.swing.JLabel jLbNamHoc;
    private javax.swing.JLabel jLbThongtin;
    private javax.swing.JLabel jLbTime;
    private javax.swing.JLabel jLbTime1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
