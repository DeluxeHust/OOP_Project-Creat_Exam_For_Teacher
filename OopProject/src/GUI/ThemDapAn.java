/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import oopproject.Answer;

/**
 *
 * @author chinguyen
 */
public class ThemDapAn extends javax.swing.JFrame {

    /**
     * Creates new form ThemDapAn
     */
    private ArrayList<Answer> dapAn;
    private Answer newDapAn;
    private DefaultListModel modelDapAn;
    private javax.swing.JList<String> danhSachDapAn;

    private int chucNang;

    public void setDapAn(ArrayList<Answer> dapAn) {
        this.dapAn = dapAn;
    }
    
    // gọi contructor này để sửa đáp án
    // OVERLOAD
    public ThemDapAn(int index, ArrayList<Answer> dapAn, DefaultListModel modelDapAn, javax.swing.JList<String> danhSachDapAn) {
        initComponents();

        this.modelDapAn = modelDapAn;
        this.danhSachDapAn = danhSachDapAn;
        this.chucNang = index;
        this.setDapAn(dapAn);

        newDapAn = new Answer();

        this.noiDungDapAn.setText((String) this.modelDapAn.get(this.chucNang));
        this.laDapAnDung.setSelected(this.dapAn.get(this.chucNang).isTrueAnswer());

        this.setResizable(false);
        this.setLocation(750, 100);
        
    }
    
    // Gọi contrustor này để thêm đáp án
    // OVERLOAD
    public ThemDapAn(ArrayList<Answer> dapAn, DefaultListModel modelDapAn, javax.swing.JList<String> danhSachDapAn) {
        initComponents();
        this.chucNang = -1;
        this.modelDapAn = modelDapAn;
        this.danhSachDapAn = danhSachDapAn;
        this.setDapAn(dapAn);

        newDapAn = new Answer();

        this.setResizable(false);
        this.setLocation(750, 100);
        
    }

    public ThemDapAn() {
        initComponents();
        this.setResizable(false);
        this.setLocation(750, 100);
        dapAn = new ArrayList<>();
        newDapAn = new Answer();
        this.modelDapAn = new DefaultListModel();
        this.danhSachDapAn = new javax.swing.JList<String>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLbDapAn = new javax.swing.JLabel();
        noiDungDapAn = new javax.swing.JTextField();
        laDapAnDung = new javax.swing.JCheckBox();
        jBtOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLbDapAn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLbDapAn.setText("Đáp Án");

        noiDungDapAn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noiDungDapAn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noiDungDapAnKeyPressed(evt);
            }
        });

        laDapAnDung.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        laDapAnDung.setText("Đáp án đúng");
        laDapAnDung.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                laDapAnDungStateChanged(evt);
            }
        });
        laDapAnDung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laDapAnDungActionPerformed(evt);
            }
        });
        laDapAnDung.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                laDapAnDungKeyPressed(evt);
            }
        });

        jBtOK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtOK.setText("OK");
        jBtOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(noiDungDapAn)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(laDapAnDung)
                        .addGap(143, 143, 143))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtOK)
                        .addGap(175, 175, 175))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLbDapAn)
                        .addGap(177, 177, 177))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLbDapAn)
                .addGap(18, 18, 18)
                .addComponent(noiDungDapAn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(laDapAnDung)
                .addGap(18, 18, 18)
                .addComponent(jBtOK)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void laDapAnDungKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_laDapAnDungKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (chucNang < 0) {
                this.newDapAn.setContent(this.noiDungDapAn.getText());
                this.dapAn.add(newDapAn);
                this.modelDapAn.addElement(newDapAn.getContent());
                this.danhSachDapAn.setModel(modelDapAn);
                int count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        count++;
                    }
                }
                if (count > 0) {
                    int[] indices = new int[count];
                    count = 0;
                    for (int k = 0; k < dapAn.size(); k++) {
                        if (dapAn.get(k).isTrueAnswer()) {
                            indices[count++] = k;
                        }
                    }
                    this.danhSachDapAn.setSelectedIndices(indices);
                }
                this.setVisible(false);
                this.dispose();
            } else {
                this.newDapAn.setContent(this.noiDungDapAn.getText());
                this.dapAn.set(this.chucNang, newDapAn);
                this.modelDapAn.set(this.chucNang, this.newDapAn.getContent());
                this.danhSachDapAn.setModel(modelDapAn);
                int count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        count++;
                    }
                }
                int[] indices = new int[count];
                count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        indices[count++] = k;
                    }
                }
                this.danhSachDapAn.setSelectedIndices(indices);
                this.setVisible(false);
                this.dispose();
            }
        }
    }//GEN-LAST:event_laDapAnDungKeyPressed

    private void jBtOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtOKActionPerformed
        // TODO add your handling code here:
        if (chucNang < 0) {
            if(this.noiDungDapAn.getText().isEmpty()) {
                this.dispose();
                return;
            }
                
            this.newDapAn.setContent(this.noiDungDapAn.getText());
            this.dapAn.add(newDapAn);
            this.modelDapAn.addElement(newDapAn.getContent());
            this.danhSachDapAn.setModel(modelDapAn);
            int count = 0;
            for (int k = 0; k < dapAn.size(); k++) {
                if (dapAn.get(k).isTrueAnswer()) {
                    count++;
                }
            }
            if (count > 0) {
                int[] indices = new int[count];
                count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        indices[count++] = k;
                    }
                }
                this.danhSachDapAn.setSelectedIndices(indices);
            }
            this.setVisible(false);
            this.dispose();
        } else {
            this.newDapAn.setContent(this.noiDungDapAn.getText());
            this.dapAn.set(this.chucNang, newDapAn);
            this.modelDapAn.set(this.chucNang, this.newDapAn.getContent());
            this.danhSachDapAn.setModel(modelDapAn);
            int count = 0;
            for (int k = 0; k < dapAn.size(); k++) {
                if (dapAn.get(k).isTrueAnswer()) {
                    count++;
                }
            }
            int[] indices = new int[count];
            count = 0;
            for (int k = 0; k < dapAn.size(); k++) {
                if (dapAn.get(k).isTrueAnswer()) {
                    indices[count++] = k;
                }
            }
            this.danhSachDapAn.setSelectedIndices(indices);
            this.setVisible(false);
            this.dispose();
        }                                 
        
    }//GEN-LAST:event_jBtOKActionPerformed

    private void noiDungDapAnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noiDungDapAnKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (chucNang < 0) {
                this.newDapAn.setContent(this.noiDungDapAn.getText());
                this.dapAn.add(newDapAn);
                this.modelDapAn.addElement(newDapAn.getContent());
                this.danhSachDapAn.setModel(modelDapAn);
                int count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        count++;
                    }
                }
                if (count > 0) {
                    int[] indices = new int[count];
                    count = 0;
                    for (int k = 0; k < dapAn.size(); k++) {
                        if (dapAn.get(k).isTrueAnswer()) {
                            indices[count++] = k;
                        }
                    }
                    this.danhSachDapAn.setSelectedIndices(indices);
                }
                this.setVisible(false);
                this.dispose();
            } else {
                this.newDapAn.setContent(this.noiDungDapAn.getText());
                this.dapAn.set(this.chucNang, newDapAn);
                this.modelDapAn.set(this.chucNang, this.newDapAn.getContent());
                this.danhSachDapAn.setModel(modelDapAn);
                int count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        count++;
                    }
                }
                int[] indices = new int[count];
                count = 0;
                for (int k = 0; k < dapAn.size(); k++) {
                    if (dapAn.get(k).isTrueAnswer()) {
                        indices[count++] = k;
                    }
                }
                this.danhSachDapAn.setSelectedIndices(indices);
                this.setVisible(false);
                this.dispose();
            }
        }
    }//GEN-LAST:event_noiDungDapAnKeyPressed

    private void laDapAnDungStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_laDapAnDungStateChanged
        // TODO add your handling code here:
        if (this.laDapAnDung.isSelected()) {
            this.newDapAn.setTrueAnswer(true);
        } else {
            this.newDapAn.setTrueAnswer(false);
        }
    }//GEN-LAST:event_laDapAnDungStateChanged

    private void laDapAnDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laDapAnDungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_laDapAnDungActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemDapAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemDapAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemDapAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemDapAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemDapAn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtOK;
    private javax.swing.JLabel jLbDapAn;
    private javax.swing.JCheckBox laDapAnDung;
    private javax.swing.JTextField noiDungDapAn;
    // End of variables declaration//GEN-END:variables
}
